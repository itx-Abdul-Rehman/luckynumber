#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (malloc) failed to allocate 32744 bytes for ChunkPool::allocate
# Possible reasons:
#   The system is out of physical RAM or swap space
#   The process is running with CompressedOops enabled, and the Java Heap may be blocking the growth of the native heap
# Possible solutions:
#   Reduce memory load on the system
#   Increase physical memory or swap space
#   Check if swap backing store is full
#   Decrease Java heap size (-Xmx/-Xms)
#   Decrease number of Java threads
#   Decrease Java thread stack sizes (-Xss)
#   Set larger code cache with -XX:ReservedCodeCacheSize=
#   JVM is running with Unscaled Compressed Oops mode in which the Java heap is
#     placed in the first 4GB address space. The Java Heap base address is the
#     maximum limit for the native heap growth. Please use -XX:HeapBaseMinAddress
#     to set the Java Heap base and to place the Java Heap above 4GB virtual address.
# This output file may be truncated or incomplete.
#
#  Out of Memory Error (arena.cpp:78), pid=15528, tid=6348
#
# JRE version: OpenJDK Runtime Environment (17.0.6) (build 17.0.6+0-b2043.56-10027231)
# Java VM: OpenJDK 64-Bit Server VM (17.0.6+0-b2043.56-10027231, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, windows-amd64)
# No core dump will be written. Minidumps are not enabled by default on client versions of Windows
#

---------------  S U M M A R Y ------------

Command Line: git4idea.http.GitAskPassApp Username for 'https://github.com': 

Host: Intel(R) Core(TM) i5-7300U CPU @ 2.60GHz, 4 cores, 7G,  Windows 11 , 64 bit Build 22621 (10.0.22621.3235)
Time: Thu Apr 11 15:18:21 2024 Pakistan Standard Time elapsed time: 0.715085 seconds (0d 0h 0m 0s)

---------------  T H R E A D  ---------------

Current thread (0x000002379a0324a0):  JavaThread "C2 CompilerThread0" daemon [_thread_in_native, id=6348, stack(0x000000ceaa400000,0x000000ceaa500000)]


Current CompileTask:
C2:    715  107 %     4       java.util.zip.ZipFile$Source::initCEN @ 240 (591 bytes)

Stack: [0x000000ceaa400000,0x000000ceaa500000]
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [jvm.dll+0x683c9a]
V  [jvm.dll+0x8427a4]
V  [jvm.dll+0x843f9e]
V  [jvm.dll+0x844603]
V  [jvm.dll+0x249b75]
V  [jvm.dll+0xabecc]
V  [jvm.dll+0xac27c]
V  [jvm.dll+0x2a64f6]
V  [jvm.dll+0x2a62b4]
V  [jvm.dll+0x805daa]
V  [jvm.dll+0xa1dd1]
V  [jvm.dll+0x6aaa3f]
V  [jvm.dll+0x6a966a]
V  [jvm.dll+0x2243f9]
V  [jvm.dll+0x22478f]
V  [jvm.dll+0x21e055]
V  [jvm.dll+0x21b51b]
V  [jvm.dll+0x1a4fdd]
V  [jvm.dll+0x22b098]
V  [jvm.dll+0x229159]
V  [jvm.dll+0x7f81ec]
V  [jvm.dll+0x7f274a]
